    <div class="container">
        <h1>Productos en Tiempo Real</h1>

        <!-- Formulario para crear un producto -->
        <form id="formCrearProducto" class="product-form">
            <input type="text" id="title" placeholder="Título" required>
            <input type="text" id="description" placeholder="Descripción" required>
            <input type="number" id="price" placeholder="Precio" required>
            <input type="text" id="code" placeholder="Código" required>
            <input type="number" id="stock" placeholder="Stock" required>
            <button type="submit">Crear Producto</button>
        </form>

        <!-- Lista de productos -->
        <ul id="listaProductos" class="product-list">
            {{#each products}}
                <li id="producto-{{this.id}}" class="product-item">
                    <span>{{this.title}} - ${{this.price}}</span>
                    <button onclick="eliminarProducto({{this.id}})" class="delete-btn">Eliminar</button>
                </li>
            {{/each}}
        </ul>
    </div>

    <!-- Script de Socket.io -->
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        // Escuchar evento para actualizar la lista de productos
        socket.on('productosActualizados', (products) => {
            const lista = document.getElementById('listaProductos');
            lista.innerHTML = ''; // Limpiar la lista actual

            // Renderizar la lista de productos
            products.forEach(product => {
                const nuevoProducto = document.createElement('li');
                nuevoProducto.id = `producto-${product.id}`;
                nuevoProducto.className = 'product-item';
                nuevoProducto.innerHTML = `
                    <span>${product.title} - $${product.price}</span>
                    <button onclick="eliminarProducto(${product.id})" class="delete-btn">Eliminar</button>
                `;
                lista.appendChild(nuevoProducto);
            });
        });

        // Escuchar errores
        socket.on('error', (mensaje) => {
            alert(mensaje);
        });

        // Enviar evento para crear un producto
        document.getElementById('formCrearProducto').addEventListener('submit', (e) => {
            e.preventDefault();
            const producto = {
                title: document.getElementById('title').value,
                description: document.getElementById('description').value,
                price: parseFloat(document.getElementById('price').value),
                code: document.getElementById('code').value,
                stock: parseInt(document.getElementById('stock').value),
            };
            socket.emit('crearProducto', producto);
        });

        // Enviar evento para eliminar un producto
        window.eliminarProducto = (id) => {
            socket.emit('eliminarProducto', id);
        };
    </script>
